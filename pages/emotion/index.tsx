import {
  Anchor,
  Breadcrumbs,
  Card,
  Center,
  Container,
  Flex,
  Group,
  Pagination,
  ScrollArea,
  Table,
  Text,
  useMantineTheme,
} from "@mantine/core";
import React, { useEffect, useState } from "react";

import DashboardLayout from "../../components/layout/DashboardLayout";
import { Emotion } from "@prisma/client";
import Head from "next/head";
import axios from "axios";

type Props = {};

const EmotionList = (props: Props) => {
  const theme = useMantineTheme();
  const items = [
    { title: "Home", href: "/" },
    { title: "Emotion List", href: "/emotions" },
  ].map((item, index) => (
    <Anchor href={item.href} key={index}>
      {item.title}
    </Anchor>
  ));

  const ths = (
    <tr>
      <th>Id</th>
      <th>User Id</th>
      <th>Name</th>
      <th>Description</th>
      <th>Latitude</th>
      <th>Longtitude</th>
      <th>Created At</th>
      <th>Updated At</th>
    </tr>
  );

  const [emotions, setEmotions] = useState([]);
  const [activePage, setPage] = useState(1);
  const [pageCount, setPageCount] = useState(1);

  const getData = async () => {
    const { data } = await axios.get("/api/emotions", {
      params: {
        page: activePage,
        limit: 10,
      },
    });
    setEmotions(data.data);

    setPageCount(data.pagination.pageCount);
  };

  useEffect(() => {
    getData();
  }, [activePage]);

  const rows = emotions.map((element: Emotion) => (
    <tr key={element.id}>
      <td>{element.userId}</td>
      <td>{element.name}</td>
      <td>{element.description}</td>
      <td>{element.latitude}</td>
      <td>{element.longtitude}</td>
      <td>{new Date(element.createdAt).toLocaleDateString()}</td>
      <td>{new Date(element.updatedAt).toLocaleDateString()}</td>
    </tr>
  ));

  return (
    <>
      <Head>
        <title>Mutluluk Endeksi | Emotion List</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <DashboardLayout>
          <Container
            fluid
            h="50px"
            bg={theme.colors.dark[6]}
            mb="md"
            style={{
              borderRadius: "15px",
              borderBottom: "2px solid #035",
              boxShadow: "0 0 10px 0 rgba(0,0,0,0.8)",
            }}
          >
            <Flex
              mih={50}
              gap="md"
              justify="flex-start"
              align="center"
              direction="row"
              wrap="wrap"
            >
              <Breadcrumbs separator="â†’">{items}</Breadcrumbs>
            </Flex>
          </Container>
          <Card
            withBorder
            shadow="sm"
            radius="md"
            bg={theme.colors.dark[5]}
            style={{
              borderRadius: "15px",
              boxShadow: "0 0 10px 0 rgba(0,0,0,0.8)",
              borderBottom: "3px solid #050",
            }}
          >
            <Card.Section withBorder inheritPadding py="xs">
              <Group position="apart">
                <Text weight={500}>Emotion List</Text>
              </Group>
            </Card.Section>
            <Card.Section mt="sm">
              <ScrollArea style={{ width: "100%" }}>
                <Table striped highlightOnHover withBorder withColumnBorders>
                  <caption>Emotion List</caption>
                  <thead>{ths}</thead>
                  <tbody>{rows}</tbody>
                  <tfoot>{ths}</tfoot>
                </Table>
              </ScrollArea>
            </Card.Section>
            <Card.Section>
              <Center w="100%" p="30px">
                <Pagination
                  page={activePage}
                  onChange={setPage}
                  total={pageCount}
                ></Pagination>
              </Center>
            </Card.Section>
          </Card>
        </DashboardLayout>
      </main>
    </>
  );
};

export default EmotionList;
